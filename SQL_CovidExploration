/*
COVID 19 DATA EXPLORATION

SKILLS USED: Joins, Temp Tables, CTEs, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types
*/

--Viewed datasets to ensure proper importing

SELECT * 
FROM `portfolio-jb5.Covid.CovidDeaths` 
WHERE continent IS NOT null
ORDER BY 3, 4
LIMIT 1000;

SELECT *
FROM `portfolio-jb5.Covid.CovidVaccinations`
WHERE continent IS NOT null
ORDER BY 3, 4
LIMIT 1000;

--Select data we are going to be using

SELECT 
  location, 
  date, 
  total_cases, 
  new_cases, 
  total_deaths, 
  population
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null
ORDER BY 1, 2;

--BY COUNTRY

--Total Cases vs Total Deaths
--Created DeathPercentage to show likelihood of death if you contract Covid in your country

SELECT 
  location, 
  date, 
  total_cases, 
  total_deaths, 
  (total_deaths/total_cases)*100 AS DeathPercentage
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null
--WHERE location = 'United States'
ORDER BY 1, 2;

--Total Cases vs Population
--Shows what percentage of population infected with Covid

SELECT 
  location, 
  date, 
  population, 
  total_cases, 
  (total_cases/population)*100 AS PercentPopulationInfected
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null
--WHERE location = 'United States'
ORDER BY 1, 2;

--Countries with highest Infection Rate compared to Population

SELECT 
  location, 
  population, 
  MAX(total_cases) AS HighestInfectionCount, 
  MAX((total_cases/population))*100 AS PercentPopulationInfected
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null
GROUP BY 
  location, 
  population
ORDER BY PercentPopulationInfected DESC;

--Countries with Highest Death Count per Population

SELECT 
  location, 
  MAX(CAST(total_deaths AS int)) AS TotalDeathCount
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null
GROUP BY location
ORDER BY TotalDeathCount DESC;

--BY CONTINENT

--Showing the Continents with the highest Death Count per Population

SELECT 
  continent, 
  MAX(CAST(total_deaths AS int)) AS TotalDeathCount
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null
GROUP BY continent
ORDER BY TotalDeathCount DESC;

--Death Percentage by Continent by Day

SELECT 
  date, 
  SUM(new_cases) AS total_cases, 
  SUM(cast(new_deaths AS INT)) AS total_deaths, 
  SUM(cast(new_deaths AS INT))/SUM(new_cases)*100 AS DeathPercentage
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null
GROUP BY date
ORDER BY 1, 2;

--Death Percentage by Continent Overall

SELECT 
  SUM(new_cases) AS total_cases, 
  SUM(cast(new_deaths AS INT)) AS total_deaths, 
  SUM(cast(new_deaths AS INT))/SUM(new_cases)*100 AS DeathPercentage
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null;

--Total Population vs Vaccinations
--Created a Rolling Count of Population Vaccinated by Country

SELECT 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPopulationVaccinated
FROM `portfolio-jb5.Covid.CovidDeaths` AS dea
JOIN `portfolio-jb5.Covid.CovidVaccinations` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent IS NOT null
ORDER BY 2, 3;

--Use CTE to perform calculation on Partition By in previous query

WITH PopvsVac AS
(
SELECT 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPopulationVaccinated
FROM `portfolio-jb5.Covid.CovidDeaths` AS dea
JOIN `portfolio-jb5.Covid.CovidVaccinations` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent IS NOT null
)
SELECT *, (RollingPopulationVaccinated/population)*100 AS PercentPopulationVaccinated
FROM PopvsVac;

--Creating a new Table to perform calculation on Partition By in previous query

DROP TABLE IF EXISTS `portfolio-jb5.Covid.PercentPopulationVaccinated`;
CREATE TABLE `portfolio-jb5.Covid.PercentPopulationVaccinated`
(
continent string,
location string,
date datetime,
population numeric,
new_vaccinations numeric,
RollingPopulationVaccinated numeric
)
;

INSERT INTO `portfolio-jb5.Covid.PercentPopulationVaccinated`
SELECT 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPopulationVaccinated
FROM `portfolio-jb5.Covid.CovidDeaths` AS dea
JOIN `portfolio-jb5.Covid.CovidVaccinations` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date;

SELECT *, (RollingPopulationVaccinated/population)*100
FROM `portfolio-jb5.Covid.PercentPopulationVaccinated`;

--CREATING VIEWS TO STORE DATA FOR LATER VISUALIZATIONS

--Percent Population Vaccinated (by Continent)

CREATE VIEW `portfolio-jb5.Covid.PercentPopulationVaccinatedView` AS 
SELECT 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPopulationVaccinated
FROM `portfolio-jb5.Covid.CovidDeaths` AS dea
JOIN `portfolio-jb5.Covid.CovidVaccinations` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent IS NOT NULL;

--Death Percentage by Continent Overall

CREATE VIEW `portfolio-jb5.Covid.DeathPercentageByContinent` AS
SELECT 
  SUM(new_cases) AS total_cases, 
  SUM(cast(new_deaths AS INT)) AS total_deaths, 
  SUM(cast(new_deaths AS INT))/SUM(new_cases)*100 AS DeathPercentage
FROM `portfolio-jb5.Covid.CovidDeaths`
WHERE continent IS NOT null;

--Total Population vs Vaccinations - Rolling Count of Population Vaccinated by Country

CREATE VIEW `portfolio-jb5.Covid.PopulationVsVaccinated` AS
SELECT 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPopulationVaccinated
FROM `portfolio-jb5.Covid.CovidDeaths` AS dea
JOIN `portfolio-jb5.Covid.CovidVaccinations` AS vac
  ON dea.location = vac.location
  AND dea.date = vac.date
WHERE dea.continent IS NOT null
ORDER BY 2, 3;
